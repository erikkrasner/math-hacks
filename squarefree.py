#!/usr/bin/env python
import sys

# Appx. 1-hour hack that generates squarefree words of arbitrary length,
# inspired by a late-night Wikipedia crawl that led me to
# http://en.wikipedia.org/wiki/Squarefree_word
# For words of length n the runtime is O(n log n).

# the infinite squarefree word is generated by taking the pattern
#  'abcbacbcabcbabcacbacabcacbcabacbabcabac' and applying it self-similarly
#  at higher and higher levels. The shift() operation transforms a character
#  at one level into a character at the next level.
def shift(char, shift_char):
    return 'abc'[('abc'.index(char) + 'abc'.index(shift_char)) % 3]

def nth_squarefree_char(n):
    sequence = 'abcbacbcabcbabcacbacabcacbcabacbabcabac'
    char = 'a'
    while n:
    	char = shift(char, sequence[n % 30])
    	n /= 30
    return char

def squarefree_word_of_length(n):
    return ''.join(nth_squarefree_char(k) for k in xrange(n))

if __name__ == '__main__':
    if len(sys.argv) > 1:
        print squarefree_word_of_length(int(sys.argv[1]))
    else:
        n = 0
        while True:
            print nth_squarefree_char(n)
            n += 1
